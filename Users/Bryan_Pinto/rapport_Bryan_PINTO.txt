# Initialisation
mkdir Hello
cd Hello
git init
git config --global user.name "Bryan Pinto"
git config --global user.email "Bryan.Pinto.1205@gmail.com"
git config --list

#1.1
touch file1.txt
git status
git add *
git status
git commit -m "[BryanPinto] Added 2 files"

#1.2
echo "Bonjour" >> file1.txt
git diff
git status
git add *
git commit -m "[BryanPinto] Write 'Bonjour' on file1.txt"
git commit --amend
echo "Bonjourx2" >> file1.txt
git commit --amend

git log
git show
echo "Hello" >> file1.txt
git status
git checkout file1.txt
git status

echo "Hello" >> file1.txt
git status
git add file1.txt
git status
git reset
git status
git checkout file1.txt

#1.3
cd ../
git clone git@github.com:saussact/git-training-repo.git
cd git-training-repo/Users
mkdir Bryan_Pinto
cd Bryan_Pinto
touch file_1.txt file_2.txt
git add *
git commit -m "[Pinto-Bryan]: add file 1 & 2"

git fetch
git log --graph --oneline --all --decorate
git config --global alias.lg "log --graph --oneline --all --decorate"
git lg

git push
git lg

#2.1
git branch lab2-Bryan
git branch -a
git checkout lab2-Bryan
git status

echo "Modify" >> file_2.txt
git add file_2.txt
git commit -m "[Pinto-Bryan]: Modify file 2"
touch file3.txt
git add file3.txt
git commit -m "[Pinto-Bryan]: Add file 3"
git checkout main

git merge lab2-Bryan
git log
git status

#2.2
git checkout lab2-Bryan
git status
echo "Modify" >> file_2.txt
git add file_2.txt
git commit -m "[Pinto-Bryan]: Modify file 2"

git checkout main
echo "Modify" >> file_1.txt
git add file_1.txt
git commit -m "[Pinto-Bryan]: Modify again file 1"

git merge lab2-Bryan
git branch -D lab2-Bryan

#3
git checkout -b lab3-Bryan
git status

echo "Modify" >> file_1.txt
git add file_1.txt
git commit -m "[Pinto-Bryan]: Modify file 1"
echo "Modify" >> file_1.txt
git add file_1.txt
git commit "[Pinto-Bryan]: Modify again file 1"

git checkout main
echo "Modify" >> file_1.txt
git add file_1.txt
git commit -m "[Pinto-Bryan]: Modify file 1"

git merge lab3-Bryan
git status
git add file_1.txt
git status
git commit -m "Fixed merge conflict"
git log

#4
git checkout -b lab4-Bryan
git status

echo "Modify" >> file_1.txt
git add file_1.txt
git commit -m "[Pinto-Bryan]: Modify file 1"
echo "Modify" >> file_1.txt
git add file_1.txt
git commit "[Pinto-Bryan]: Modify again file 1"

git checkout main
touch file_5.txt
git add file_5.txt
git commit -m "[Pinto-Bryan]: Add file 5"

git checkout lab4-Bryan

git rebase main
git log lab4-Bryan

#5
git clone git@github.com:saussact/git-workflow.git
cd gitgit-workflow/users
git checkout -b issue1-implement-feature-Bryan
mkdir BryanPinto
cd BryanPinto
touch file_1.txt
git add *
git commit -m "[BryanPinto]: Change 1"
touch file_2.txt
git add file_2.txt
git commit -m "[BryanPinto]: Change 2"
echo "Modify" >> file_1.txt
git add file_1.txt
git commit -m "[PintoBryan]: Change 3"
echo "Modify" >> file_2.txt
git add file_2.txt
git commit -m "[PintoBryan]: Change 4"

git rebase -i main

git checkout main
git merge issue1-implement-feature-Bryan

git fetch origin
git rebase origin/main

git push
